steps:
# 1. Build the container image using the Dockerfile
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/exact-transcription-repo/exact-transcription-app:$COMMIT_SHA', '.']

# 2. Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/exact-transcription-repo/exact-transcription-app:$COMMIT_SHA']

# 3. Deploy to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'exact-transcription-service'
    - '--image'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/exact-transcription-repo/exact-transcription-app:$COMMIT_SHA'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--port'
    - '8080'
    # --- Secret Configuration ---
    - '--update-secrets=HUGGING_FACE_HUB_TOKEN=huggingface-key:latest'
    - '--update-secrets=FLASK_SECRET_KEY=flask-secret:latest'
    - '--update-secrets=GOOGLE_API_KEY=gemini-api-key:latest' # New: Assumes secret named 'gemini-api-key'
    # --- Environment Variables ---
    - '--set-env-vars=GEMINI_MODEL=gemini-1.5-flash-latest' # New: Set Gemini model from .env
    # --- Resource Allocation ---
    - '--memory=16Gi'
    - '--cpu=4'
    # --- Other Settings ---
    - '--timeout=1200'
    - '--concurrency=4'
    - '--allow-unauthenticated'

images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/exact-transcription-repo/exact-transcription-app:$COMMIT_SHA'